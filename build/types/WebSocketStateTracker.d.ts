import { WebSocketClient } from "./WebSocketClient";
import { ObservableIndexedObjectCollection } from "./IndexedObjectCollection";
import { Message, Role, Room, RoomMember, RoomSummary, Space, SpaceMember, Topic, User } from "pserv-ts-types";
export declare class WebSocketStateTracker {
    private readonly client;
    private readonly joinedSpaces;
    private readonly joinedRooms;
    private readonly spacesRoles;
    private readonly roomsTopics;
    private readonly topicsMessages;
    private readonly spacesRooms;
    private readonly spacesMembers;
    private readonly roomsMembers;
    private readonly deferredGetters;
    private reconnecting;
    private me;
    constructor(client: WebSocketClient);
    getMe(): Promise<User>;
    getJoinedSpaces(): Promise<ObservableIndexedObjectCollection<Space>>;
    getJoinedRooms(): Promise<ObservableIndexedObjectCollection<Room>>;
    getSpaceRoles(spaceId: string): Promise<ObservableIndexedObjectCollection<Role> | null>;
    getRoomTopics(roomId: string): Promise<ObservableIndexedObjectCollection<Topic> | null>;
    getTopicMessages(topicId: string): Promise<ObservableIndexedObjectCollection<Message> | null>;
    getSpaceRooms(spaceId: string): Promise<ObservableIndexedObjectCollection<RoomSummary> | null>;
    getSpaceMembers(spaceId: string): Promise<ObservableIndexedObjectCollection<SpaceMember> | null>;
    getRoomMembers(roomId: string): Promise<ObservableIndexedObjectCollection<RoomMember> | null>;
    private deferredGetterReadiness;
    private bind;
    private createDeferredGetter;
    private handleDisconnect;
    private handleNewMessage;
    private handleNewRole;
    private handleNewRoom;
    private handleNewTopic;
    private handleRoleDeleted;
    private handleRoomDeleted;
    private handleRoomJoined;
    private addJoinedRooms;
    private handleRoomLeft;
    private handleRoomMemberJoined;
    private handleRoomMemberLeft;
    private handleRoomMembers;
    private handleSession;
    private handleSpaceDeleted;
    private handleSpaceJoined;
    private addJoinedSpaces;
    private handleSpaceLeft;
    private handleSpaceMemberJoined;
    private handleSpaceMemberLeft;
    private handleSpaceMembers;
    private handleSpaceRooms;
    private handleSpaceMemberUpdate;
    private handleTopicDeleted;
}
