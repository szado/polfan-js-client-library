{"version":3,"file":"index.js","mappings":"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","sources":["webpack://PServ/webpack/universalModuleDefinition","webpack://PServ/webpack/bootstrap","webpack://PServ/./src/connections/ConnectionAssets.ts","webpack://PServ/webpack/runtime/define property getters","webpack://PServ/webpack/runtime/hasOwnProperty shorthand","webpack://PServ/webpack/runtime/make namespace object","webpack://PServ/./src/ObservableInterface.ts","webpack://PServ/./src/dtos/Dto.ts","webpack://PServ/./src/dtos/protocol/Envelope.ts","webpack://PServ/./src/dtos/protocol/events/Bye.ts","webpack://PServ/./src/dtos/protocol/events/Ok.ts","webpack://PServ/./src/dtos/protocol/events/Error.ts","webpack://PServ/./src/dtos/Role.ts","webpack://PServ/./src/dtos/Space.ts","webpack://PServ/./src/dtos/Topic.ts","webpack://PServ/./src/dtos/Room.ts","webpack://PServ/./src/dtos/UserState.ts","webpack://PServ/./src/dtos/User.ts","webpack://PServ/./src/dtos/protocol/events/Session.ts","webpack://PServ/./src/dtos/Permission.ts","webpack://PServ/./src/dtos/protocol/events/Permissions.ts","webpack://PServ/./src/dtos/protocol/events/SpaceJoined.ts","webpack://PServ/./src/dtos/protocol/events/SpaceLeft.ts","webpack://PServ/./src/dtos/SpaceMember.ts","webpack://PServ/./src/dtos/protocol/events/SpaceMemberJoined.ts","webpack://PServ/./src/dtos/protocol/events/SpaceMemberLeft.ts","webpack://PServ/./src/dtos/protocol/events/SpaceMemberUpdate.ts","webpack://PServ/./src/dtos/protocol/events/SpaceDeleted.ts","webpack://PServ/./src/dtos/protocol/events/SpaceMembers.ts","webpack://PServ/./src/dtos/RoomSummary.ts","webpack://PServ/./src/dtos/protocol/events/SpaceRooms.ts","webpack://PServ/./src/dtos/protocol/events/NewRole.ts","webpack://PServ/./src/dtos/protocol/events/RoleDeleted.ts","webpack://PServ/./src/dtos/protocol/events/RoomJoined.ts","webpack://PServ/./src/dtos/protocol/events/RoomLeft.ts","webpack://PServ/./src/dtos/RoomMember.ts","webpack://PServ/./src/dtos/protocol/events/RoomMemberJoined.ts","webpack://PServ/./src/dtos/protocol/events/RoomMemberLeft.ts","webpack://PServ/./src/dtos/protocol/events/RoomMembers.ts","webpack://PServ/./src/dtos/protocol/events/NewRoom.ts","webpack://PServ/./src/dtos/protocol/events/RoomDeleted.ts","webpack://PServ/./src/dtos/protocol/events/NewTopic.ts","webpack://PServ/./src/dtos/protocol/events/TopicDeleted.ts","webpack://PServ/./src/dtos/Message.ts","webpack://PServ/./src/dtos/protocol/commands/CreateMessage.ts","webpack://PServ/./src/protocol.ts","webpack://PServ/./src/dtos/protocol/events/NewMessage.ts","webpack://PServ/./src/dtos/protocol/commands/GetSession.ts","webpack://PServ/./src/dtos/protocol/commands/SetUserPermissions.ts","webpack://PServ/./src/dtos/protocol/commands/GetUserPermissions.ts","webpack://PServ/./src/dtos/protocol/commands/GetComputedPermissions.ts","webpack://PServ/./src/dtos/protocol/commands/JoinSpace.ts","webpack://PServ/./src/dtos/protocol/commands/LeaveSpace.ts","webpack://PServ/./src/dtos/protocol/commands/CreateSpace.ts","webpack://PServ/./src/dtos/protocol/commands/DeleteSpace.ts","webpack://PServ/./src/dtos/protocol/commands/GetSpaceMembers.ts","webpack://PServ/./src/dtos/protocol/commands/GetSpaceRooms.ts","webpack://PServ/./src/dtos/protocol/commands/CreateRole.ts","webpack://PServ/./src/dtos/protocol/commands/DeleteRole.ts","webpack://PServ/./src/dtos/protocol/commands/AssignRole.ts","webpack://PServ/./src/dtos/protocol/commands/DeassignRole.ts","webpack://PServ/./src/dtos/protocol/commands/SetRolePermissions.ts","webpack://PServ/./src/dtos/protocol/commands/GetRolePermissions.ts","webpack://PServ/./src/dtos/protocol/commands/JoinRoom.ts","webpack://PServ/./src/dtos/protocol/commands/LeaveRoom.ts","webpack://PServ/./src/dtos/protocol/commands/CreateRoom.ts","webpack://PServ/./src/dtos/protocol/commands/DeleteRoom.ts","webpack://PServ/./src/dtos/protocol/commands/GetRoomMembers.ts","webpack://PServ/./src/dtos/protocol/commands/CreateTopic.ts","webpack://PServ/./src/dtos/protocol/commands/DeleteTopic.ts","webpack://PServ/./src/connections/WebSocketConnection.ts","webpack://PServ/./src/connections/RestApiConnection.ts","webpack://PServ/./src/Client.ts","webpack://PServ/./src/connections/WebApiConnection.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PServ\"] = factory();\n\telse\n\t\troot[\"PServ\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","import {ObservableInterface} from \"../ObservableInterface\";\r\n\r\nexport enum ChatConnectionEvent {\r\n    message = 'message',\r\n    destroy = 'destroy',\r\n    ready = 'ready',\r\n    error = 'error',\r\n}\r\n\r\nexport interface ConnectionOptionsInterface {\r\n    url: string;\r\n    token?: string;\r\n    temporaryNick?: string;\r\n}\r\n\r\nexport interface ChatConnectionInterface extends ObservableInterface {\r\n    send(data: any): void;\r\n    destroy(): void;\r\n}","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export type EventHandler<T = any> = (...args: T[]) => void;\r\ntype HandlersMap = Map<string, EventHandler[]>;\r\n\r\nexport interface ObservableInterface {\r\n    on(eventName: string, handler: EventHandler): ObservableInterface;\r\n    once(eventName: string, handler: EventHandler): ObservableInterface;\r\n}\r\n\r\nexport abstract class EventTarget implements ObservableInterface {\r\n    protected events: HandlersMap = new Map<string, EventHandler[]>();\r\n    protected onceEvents: HandlersMap = new Map<string, EventHandler[]>();\r\n\r\n    public on(eventName: string, handler: EventHandler): EventTarget {\r\n        this.addHandler(this.events, eventName, handler);\r\n        return this;\r\n    }\r\n\r\n    public once(eventName: string, handler: EventHandler): EventTarget {\r\n        this.addHandler(this.onceEvents, eventName, handler);\r\n        return this;\r\n    }\r\n\r\n    public emit(eventName: string, ...args: any): EventTarget {\r\n        this.callHandlers(this.events, eventName, args);\r\n        this.callHandlers(this.onceEvents, eventName, args);\r\n        this.onceEvents.delete(eventName);\r\n        return this;\r\n    }\r\n\r\n    private addHandler(map: HandlersMap, eventName: string, handler: EventHandler): void {\r\n        const handlers = map.get(eventName) ?? [];\r\n        handlers.push(handler);\r\n        map.set(eventName, handlers);\r\n    }\r\n\r\n    private callHandlers(map: HandlersMap, eventName: string, args: any[]): void {\r\n        map.get(eventName)?.forEach(callback => callback(...args));\r\n    }\r\n}","export function cast<T extends typeof Dto>(data: any, dto: T): T|undefined {\r\n    if (data instanceof dto) {\r\n        return data as any;\r\n    }\r\n    return new (dto as any)(data);\r\n}\r\n\r\nexport function castArray<T extends typeof Dto>(data: any[], dto: T): T[] {\r\n    if (!Array.isArray(data)) throw new Error(`Passed data is not an array of ${dto.name}`);\r\n    return data.map(item => cast(item, dto));\r\n}\r\n\r\ntype ExcludeMethods<T> = Pick<T, { [K in keyof T]: T[K] extends Function ? never : K }[keyof T]>;\r\nexport type DtoData<T> = { [K in keyof ExcludeMethods<T>]: any };\r\n\r\nexport abstract class Dto {\r\n    public constructor(...args: any[]) {\r\n    }\r\n\r\n    public toJson(overrideBy: any = {}): string {\r\n        return JSON.stringify(this.toRaw(overrideBy));\r\n    }\r\n\r\n    public toRaw(overrideBy: any = {}): DtoData<this> {\r\n        const object: {[key: string]: any} = {};\r\n        Object.keys(this).forEach(key => {\r\n            if (overrideBy.hasOwnProperty(key)) {\r\n                object[key] = overrideBy[key];\r\n            } else if ((this as any)[key] instanceof Dto) {\r\n                object[key] = (this as any)[key].toRaw();\r\n            } else {\r\n                object[key] = (this as any)[key]\r\n            }\r\n        });\r\n        return object as DtoData<this>;\r\n    }\r\n\r\n    public clone(overrideBy: any = {}): this {\r\n        return new (this.constructor as any)(this.toRaw(overrideBy));\r\n    }\r\n\r\n    protected fill(data: any, overrideBy: any = {}) {\r\n        Object.assign(this, {...data, ...overrideBy});\r\n    }\r\n}","import {Dto, DtoData} from \"../Dto\";\r\n\r\nexport class Envelope<T = any> extends Dto {\r\n    public readonly type: string;\r\n    public readonly ref?: string;\r\n    public readonly data: T;\r\n\r\n    public constructor(data: DtoData<Envelope>) {\r\n        super();\r\n        this.fill(data);\r\n    }\r\n}","import {Dto, DtoData} from \"../../Dto\";\n\nexport class Bye extends Dto {\n    public readonly reason: string;\n\n    public constructor(data: DtoData<Bye>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class Ok extends Dto {\n    public constructor(data: DtoData<Ok>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class Error extends Dto {\n    public readonly code: string;\n    public readonly message: string;\n\n    public constructor(data: DtoData<Error>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {Dto, DtoData} from \"./Dto\";\r\n\r\nexport class Role extends Dto {\r\n    public readonly id: string;\r\n    public readonly name: string;\r\n    public readonly color?: string;\r\n\r\n    public constructor(data: DtoData<Role>) {\r\n        super();\r\n        this.fill(data);\r\n    }\r\n}","import {castArray, Dto, DtoData} from \"./Dto\";\r\nimport {Role} from \"./Role\";\r\n\r\nexport class Space extends Dto {\r\n    public readonly id: string;\r\n    public readonly name: string;\r\n    public readonly roles: Role[];\r\n\r\n    public constructor(data: DtoData<Space>) {\r\n        super();\r\n        this.fill(data, {\r\n            roles: castArray(data.roles, Role)\r\n        });\r\n    }\r\n}","import {Dto, DtoData} from \"./Dto\";\r\n\r\nexport class Topic extends Dto {\r\n    public readonly id: string;\r\n    public readonly name: string;\r\n    public readonly description: string;\r\n\r\n    public constructor(data: DtoData<Topic>) {\r\n        super();\r\n        this.fill(data);\r\n    }\r\n}","import {castArray, Dto, DtoData} from \"./Dto\";\r\nimport {Topic} from \"./Topic\";\r\n\r\nexport class Room extends Dto {\r\n    public readonly id: string;\r\n    public readonly name: string;\r\n    public readonly topics: Topic[];\r\n\r\n    public constructor(data: DtoData<Room>) {\r\n        super();\r\n        this.fill(data, {\r\n            topics: castArray(data.topics, Topic),\r\n        });\r\n    }\r\n}","import {Space} from \"./Space\";\r\nimport {Room} from \"./Room\";\r\nimport {castArray, Dto, DtoData} from \"./Dto\";\r\n\r\nexport class UserState extends Dto {\r\n    public readonly spaces: Space[];\r\n    public readonly rooms: Room[];\r\n\r\n    public constructor(data: DtoData<UserState>) {\r\n        super();\r\n        this.fill(data, {\r\n            spaces: castArray(data.spaces, Space),\r\n            rooms: castArray(data.rooms, Room),\r\n        });\r\n    }\r\n}","import {Dto, DtoData} from \"./Dto\";\r\n\r\nexport type UserFlag = 'bot' | 'temp';\r\n\r\nexport class User extends Dto {\r\n    public readonly id: string;\r\n    public readonly nick: string;\r\n    public readonly avatar: string;\r\n    public readonly flags: UserFlag[];\r\n\r\n    public constructor(data: DtoData<User>) {\r\n        super();\r\n        this.fill(data);\r\n    }\r\n}","import {cast, Dto, DtoData} from \"../../Dto\";\r\nimport {UserState} from \"../../UserState\";\r\nimport {User} from \"../../User\";\r\n\r\nexport class Session extends Dto {\r\n    public readonly serverVersion: string;\r\n    public readonly state: UserState;\r\n    public readonly user: User;\r\n\r\n    public constructor(data: DtoData<Session>) {\r\n        super();\r\n        this.fill(data, {\r\n            state: cast(data.state, UserState),\r\n            user: cast(data.user, User),\r\n        });\r\n    }\r\n}\r\n","import {Dto, DtoData} from \"./Dto\";\r\n\r\nexport class Permission extends Dto {\r\n    public readonly name: string;\r\n    public readonly value: boolean;\r\n    public readonly skip: boolean;\r\n\r\n    public constructor(data: DtoData<Permission>) {\r\n        super(data);\r\n        this.fill(data);\r\n    }\r\n}","import {castArray, Dto, DtoData} from \"../../Dto\";\nimport {Permission} from \"../../Permission\";\n\nexport class Permissions extends Dto {\n    public readonly permissions: Permission[];\n\n    public constructor(data: DtoData<Permissions>) {\n        super();\n        this.fill(data, {\n            permissions: castArray(data.permissions, Permission),\n        });\n    }\n}\n","import {cast, Dto, DtoData} from \"../../Dto\";\nimport {Space} from \"../../Space\";\n\nexport class SpaceJoined extends Dto {\n    public readonly space: Space;\n\n    public constructor(data: DtoData<SpaceJoined>) {\n        super();\n        this.fill(data, {\n            space: cast(data.space, Space),\n        });\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class SpaceLeft extends Dto {\n    public readonly id: string;\n\n    public constructor(data: DtoData<SpaceLeft>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {castArray, Dto, DtoData} from \"./Dto\";\r\nimport {User} from \"./User\";\r\n\r\nexport class SpaceMember extends Dto {\r\n    public readonly user: User;\r\n    public readonly roles: string[];\r\n\r\n    public constructor(data: DtoData<SpaceMember>) {\r\n        super();\r\n        this.fill(data, {\r\n            user: castArray(data.user, User),\r\n        });\r\n    }\r\n}","import {cast, Dto, DtoData} from \"../../Dto\";\nimport {SpaceMember} from \"../../SpaceMember\";\n\nexport class SpaceMemberJoined extends Dto {\n    public readonly member: SpaceMember;\n\n    public constructor(data: DtoData<SpaceMemberJoined>) {\n        super();\n        this.fill(data, {\n            member: cast(data.member, SpaceMember),\n        });\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class SpaceMemberLeft extends Dto {\n    public readonly userId: string;\n\n    public constructor(data: DtoData<SpaceMemberLeft>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {cast, Dto, DtoData} from \"../../Dto\";\nimport {SpaceMember} from \"../../SpaceMember\";\n\nexport class SpaceMemberUpdate extends Dto {\n    public readonly member: SpaceMember;\n\n    public constructor(data: DtoData<SpaceMemberUpdate>) {\n        super();\n        this.fill(data, {\n            member: cast(data.member, SpaceMember),\n        });\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class SpaceDeleted extends Dto {\n    public readonly id: string;\n\n    public constructor(data: DtoData<SpaceDeleted>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {castArray, Dto, DtoData} from \"../../Dto\";\nimport {SpaceMember} from \"../../SpaceMember\";\n\nexport class SpaceMembers extends Dto {\n    public readonly members: SpaceMember[];\n\n    public constructor(data: DtoData<SpaceMembers>) {\n        super();\n        this.fill(data, {\n            members: castArray(data.members, SpaceMember),\n        });\n    }\n}\n","import {Dto, DtoData} from \"./Dto\";\r\n\r\nexport class RoomSummary extends Dto {\r\n    public readonly id: string;\r\n    public readonly name: string;\r\n    public readonly description: string;\r\n\r\n    public constructor(data: DtoData<RoomSummary>) {\r\n        super();\r\n        this.fill(data);\r\n    }\r\n}","import {castArray, Dto, DtoData} from \"../../Dto\";\nimport {RoomSummary} from \"../../RoomSummary\";\n\nexport class SpaceRooms extends Dto {\n    public readonly summaries: RoomSummary[];\n\n    public constructor(data: DtoData<SpaceRooms>) {\n        super();\n        this.fill(data, {\n            summaries: castArray(data.summaries, RoomSummary),\n        });\n    }\n}\n","import {cast, Dto, DtoData} from \"../../Dto\";\nimport {Role} from \"../../Role\";\n\nexport class NewRole extends Dto {\n    public readonly spaceId: string;\n    public readonly role: Role;\n\n    public constructor(data: DtoData<NewRole>) {\n        super();\n        this.fill(data, {\n            role: cast(data.role, Role),\n        });\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class RoleDeleted extends Dto {\n    public readonly roleId: string;\n    public readonly spaceId: string;\n\n    public constructor(data: DtoData<RoleDeleted>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {cast, Dto, DtoData} from \"../../Dto\";\nimport {Room} from \"../../Room\";\n\nexport class RoomJoined extends Dto {\n    public readonly room: Room;\n\n    public constructor(data: DtoData<RoomJoined>) {\n        super();\n        this.fill(data, {\n            room: cast(data.room, Room),\n        });\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class RoomLeft extends Dto {\n    public readonly id: string;\n\n    public constructor(data: DtoData<RoomLeft>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {cast, Dto, DtoData} from \"./Dto\";\r\nimport {User} from \"./User\";\r\n\r\nexport class RoomMember extends Dto {\r\n    public readonly user: User;\r\n\r\n    public constructor(data: DtoData<RoomMember>) {\r\n        super();\r\n        this.fill(data, {\r\n            user: cast(data.user, User),\r\n        });\r\n    }\r\n}","import {cast, Dto, DtoData} from \"../../Dto\";\nimport {RoomMember} from \"../../RoomMember\";\n\nexport class RoomMemberJoined extends Dto {\n    public readonly member: RoomMember;\n\n    public constructor(data: DtoData<RoomMemberJoined>) {\n        super();\n        this.fill(data, {\n            member: cast(data.member, RoomMember),\n        });\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class RoomMemberLeft extends Dto {\n    public readonly userId: string;\n\n    public constructor(data: DtoData<RoomMemberLeft>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {castArray, Dto, DtoData} from \"../../Dto\";\nimport {RoomMember} from \"../../RoomMember\";\n\nexport class RoomMembers extends Dto {\n    public readonly members: RoomMember[];\n\n    public constructor(data: DtoData<RoomMembers>) {\n        super();\n        this.fill(data, {\n            members: castArray(data.members, RoomMember),\n        });\n    }\n}\n","import {cast, Dto, DtoData} from \"../../Dto\";\nimport {RoomSummary} from \"../../RoomSummary\";\n\nexport class NewRoom extends Dto {\n    public readonly summary: RoomSummary;\n    public readonly spaceId: string;\n\n    public constructor(data: DtoData<NewRoom>) {\n        super();\n        this.fill(data, {\n            summary: cast(data.summary, RoomSummary),\n        });\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class RoomDeleted extends Dto {\n    public readonly id: string;\n\n    public constructor(data: DtoData<RoomDeleted>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {cast, Dto, DtoData} from \"../../Dto\";\nimport {Topic} from \"../../Topic\";\n\nexport class NewTopic extends Dto {\n    public readonly roomId: string;\n    public readonly topic: Topic;\n\n    public constructor(data: DtoData<NewTopic>) {\n        super();\n        this.fill(data, {\n            topic: cast(data.topic, Topic),\n        });\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class TopicDeleted extends Dto {\n    public readonly id: string;\n\n    public constructor(data: DtoData<TopicDeleted>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {cast, Dto, DtoData} from \"./Dto\";\r\nimport {User} from \"./User\";\r\n\r\nexport class Message extends Dto {\r\n    public readonly id: string;\r\n    public readonly author: User;\r\n    public readonly topicId: string;\r\n    public readonly content: string;\r\n\r\n    public constructor(data: DtoData<Message>) {\r\n        super();\r\n        this.fill(data, {\r\n            author: cast(data.author, User),\r\n        });\r\n    }\r\n}","import {Dto, DtoData} from \"../../Dto\";\nimport {Message} from \"../../Message\";\n\nexport class CreateMessage extends Dto {\n    public readonly topicId: string;\n    public readonly content: string;\n\n    public constructor(data: DtoData<Message>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {Bye} from \"./dtos/protocol/events/Bye\";\r\nimport {Ok} from \"./dtos/protocol/events/Ok\";\r\nimport {Error} from \"./dtos/protocol/events/Error\";\r\nimport {Session} from \"./dtos/protocol/events/Session\";\r\nimport {Permissions} from \"./dtos/protocol/events/Permissions\";\r\nimport {SpaceJoined} from \"./dtos/protocol/events/SpaceJoined\";\r\nimport {SpaceLeft} from \"./dtos/protocol/events/SpaceLeft\";\r\nimport {SpaceMemberJoined} from \"./dtos/protocol/events/SpaceMemberJoined\";\r\nimport {SpaceMemberLeft} from \"./dtos/protocol/events/SpaceMemberLeft\";\r\nimport {SpaceMemberUpdate} from \"./dtos/protocol/events/SpaceMemberUpdate\";\r\nimport {SpaceDeleted} from \"./dtos/protocol/events/SpaceDeleted\";\r\nimport {SpaceMembers} from \"./dtos/protocol/events/SpaceMembers\";\r\nimport {SpaceRooms} from \"./dtos/protocol/events/SpaceRooms\";\r\nimport {NewRole} from \"./dtos/protocol/events/NewRole\";\r\nimport {RoleDeleted} from \"./dtos/protocol/events/RoleDeleted\";\r\nimport {RoomJoined} from \"./dtos/protocol/events/RoomJoined\";\r\nimport {RoomLeft} from \"./dtos/protocol/events/RoomLeft\";\r\nimport {RoomMemberJoined} from \"./dtos/protocol/events/RoomMemberJoined\";\r\nimport {RoomMemberLeft} from \"./dtos/protocol/events/RoomMemberLeft\";\r\nimport {RoomMembers} from \"./dtos/protocol/events/RoomMembers\";\r\nimport {NewRoom} from \"./dtos/protocol/events/NewRoom\";\r\nimport {RoomDeleted} from \"./dtos/protocol/events/RoomDeleted\";\r\nimport {NewTopic} from \"./dtos/protocol/events/NewTopic\";\r\nimport {TopicDeleted} from \"./dtos/protocol/events/TopicDeleted\";\r\nimport {NewMessage} from \"./dtos/protocol/events/NewMessage\";\r\nimport {GetSession} from \"./dtos/protocol/commands/GetSession\";\r\nimport {SetUserPermissions} from \"./dtos/protocol/commands/SetUserPermissions\";\r\nimport {GetUserPermissions} from \"./dtos/protocol/commands/GetUserPermissions\";\r\nimport {GetComputedPermissions} from \"./dtos/protocol/commands/GetComputedPermissions\";\r\nimport {JoinSpace} from \"./dtos/protocol/commands/JoinSpace\";\r\nimport {LeaveSpace} from \"./dtos/protocol/commands/LeaveSpace\";\r\nimport {CreateSpace} from \"./dtos/protocol/commands/CreateSpace\";\r\nimport {DeleteSpace} from \"./dtos/protocol/commands/DeleteSpace\";\r\nimport {GetSpaceMembers} from \"./dtos/protocol/commands/GetSpaceMembers\";\r\nimport {GetSpaceRooms} from \"./dtos/protocol/commands/GetSpaceRooms\";\r\nimport {CreateRole} from \"./dtos/protocol/commands/CreateRole\";\r\nimport {DeleteRole} from \"./dtos/protocol/commands/DeleteRole\";\r\nimport {AssignRole} from \"./dtos/protocol/commands/AssignRole\";\r\nimport {DeassignRole} from \"./dtos/protocol/commands/DeassignRole\";\r\nimport {SetRolePermissions} from \"./dtos/protocol/commands/SetRolePermissions\";\r\nimport {GetRolePermissions} from \"./dtos/protocol/commands/GetRolePermissions\";\r\nimport {JoinRoom} from \"./dtos/protocol/commands/JoinRoom\";\r\nimport {LeaveRoom} from \"./dtos/protocol/commands/LeaveRoom\";\r\nimport {CreateRoom} from \"./dtos/protocol/commands/CreateRoom\";\r\nimport {DeleteRoom} from \"./dtos/protocol/commands/DeleteRoom\";\r\nimport {GetRoomMembers} from \"./dtos/protocol/commands/GetRoomMembers\";\r\nimport {CreateTopic} from \"./dtos/protocol/commands/CreateTopic\";\r\nimport {DeleteTopic} from \"./dtos/protocol/commands/DeleteTopic\";\r\nimport {CreateMessage} from \"./dtos/protocol/commands/CreateMessage\";\r\nimport {Dto} from \"./dtos/Dto\";\r\n\r\nexport const events = {\r\n    // General events\r\n    Bye,\r\n    Ok,\r\n    Error,\r\n    Session,\r\n    Permissions,\r\n    // Space events\r\n    SpaceJoined,\r\n    SpaceLeft,\r\n    SpaceMemberJoined,\r\n    SpaceMemberLeft,\r\n    SpaceMemberUpdate,\r\n    SpaceDeleted,\r\n    SpaceMembers,\r\n    SpaceRooms,\r\n    NewRole,\r\n    RoleDeleted,\r\n    // Room events\r\n    RoomJoined,\r\n    RoomLeft,\r\n    RoomMemberJoined,\r\n    RoomMemberLeft,\r\n    RoomMembers,\r\n    NewRoom,\r\n    RoomDeleted,\r\n    // Topic events\r\n    NewTopic,\r\n    TopicDeleted,\r\n    NewMessage,\r\n} as {[x: string]: typeof Dto};\r\n\r\nexport const commands = {\r\n    // General commands\r\n    GetSession,\r\n    SetUserPermissions,\r\n    GetUserPermissions,\r\n    GetComputedPermissions,\r\n    // Space commands\r\n    JoinSpace,\r\n    LeaveSpace,\r\n    CreateSpace,\r\n    DeleteSpace,\r\n    GetSpaceMembers,\r\n    GetSpaceRooms,\r\n    CreateRole,\r\n    DeleteRole,\r\n    AssignRole,\r\n    DeassignRole,\r\n    SetRolePermissions,\r\n    GetRolePermissions,\r\n    // Room commands\r\n    JoinRoom,\r\n    LeaveRoom,\r\n    CreateRoom,\r\n    DeleteRoom,\r\n    GetRoomMembers,\r\n    // Topic commands\r\n    CreateTopic,\r\n    DeleteTopic,\r\n    CreateMessage,\r\n} as {[x: string]: typeof Dto}","import {cast, Dto, DtoData} from \"../../Dto\";\nimport {Message} from \"../../Message\";\n\nexport class NewMessage extends Dto {\n    public readonly message: Message;\n\n    public constructor(data: DtoData<NewMessage>) {\n        super();\n        this.fill(data, {\n            message: cast(data.message, Message),\n        });\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class GetSession extends Dto {\n    public constructor(data: DtoData<GetSession>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {Permission} from \"../../Permission\";\nimport {castArray, Dto, DtoData} from \"../../Dto\";\n\nexport class SetUserPermissions extends Dto {\n    public readonly permissions: Permission[];\n    public readonly layer: 'Global' | 'Space' | 'Room' | 'Topic';\n    public readonly layerId: string;\n    public readonly userId: string;\n\n    public constructor(data: DtoData<SetUserPermissions>) {\n        super();\n        this.fill(data, {\n            permissions: castArray(data.permissions, Permission),\n        });\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class GetUserPermissions extends Dto {\n    public readonly layer: 'Global' | 'Space' | 'Room' | 'Topic';\n    public readonly layerId: string;\n    public readonly userId: string;\n    public readonly names: string[] | null | undefined;\n\n    public constructor(data: DtoData<GetUserPermissions>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class GetComputedPermissions extends Dto {\n    public readonly names: string[] | null | undefined;\n    public readonly spaceId: string;\n    public readonly roomId: string;\n    public readonly topicId: string;\n\n    public constructor(data: DtoData<GetComputedPermissions>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class JoinSpace extends Dto {\n    public readonly id: string;\n\n    public constructor(data: DtoData<JoinSpace>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class LeaveSpace extends Dto {\n    public readonly id: string;\n\n    public constructor(data: DtoData<LeaveSpace>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class CreateSpace extends Dto {\n    public readonly name: string;\n\n    public constructor(data: DtoData<CreateSpace>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class DeleteSpace extends Dto {\n    public readonly id: string;\n\n    public constructor(data: DtoData<DeleteSpace>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class GetSpaceMembers extends Dto {\n    public readonly id: string;\n\n    public constructor(data: DtoData<GetSpaceMembers>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class GetSpaceRooms extends Dto {\n    public readonly id: string;\n\n    public constructor(data: DtoData<GetSpaceRooms>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class CreateRole extends Dto {\n    public readonly spaceId: string;\n    public readonly name: string;\n    public readonly color: string;\n\n    public constructor(data: DtoData<CreateRole>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class DeleteRole extends Dto {\n    public readonly roleId: string;\n    public readonly spaceId: string;\n\n    public constructor(data: DtoData<DeleteRole>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class AssignRole extends Dto {\n    public readonly roleId: string;\n    public readonly spaceId: string;\n    public readonly userId: string;\n\n    public constructor(data: DtoData<AssignRole>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class DeassignRole extends Dto {\n    public readonly roleId: string;\n    public readonly spaceId: string;\n    public readonly userId: string;\n\n    public constructor(data: DtoData<DeassignRole>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {castArray, Dto, DtoData} from \"../../Dto\";\nimport {Permission} from \"../../Permission\";\n\nexport class SetRolePermissions extends Dto {\n    public readonly permissions: Permission[];\n    public readonly layer: 'Space' | 'Room' | 'Topic';\n    public readonly layerId: string;\n    public readonly roleId: string;\n\n    public constructor(data: DtoData<SetRolePermissions>) {\n        super();\n        this.fill(data, {\n            permissions: castArray(data.permissions, Permission),\n        });\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class GetRolePermissions extends Dto {\n    public readonly layer: 'Space' | 'Room' | 'Topic';\n    public readonly layerId: string;\n    public readonly roleId: string;\n    public readonly names: string[] | null | undefined;\n\n    public constructor(data: DtoData<GetRolePermissions>) {\n        super();\n        this.fill(data);\n    }\n}","import {Dto, DtoData} from \"../../Dto\";\n\nexport class JoinRoom extends Dto {\n    public readonly id: string;\n\n    public constructor(data: DtoData<JoinRoom>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class LeaveRoom extends Dto {\n    public readonly id: string;\n\n    public constructor(data: DtoData<LeaveRoom>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class CreateRoom extends Dto {\n    public readonly spaceId: string;\n    public readonly name: string;\n    public readonly description: string;\n\n    public constructor(data: DtoData<CreateRoom>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class DeleteRoom extends Dto {\n    public readonly id: string;\n\n    public constructor(data: DtoData<DeleteRoom>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class GetRoomMembers extends Dto {\n    public readonly id: string;\n\n    public constructor(data: DtoData<GetRoomMembers>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class CreateTopic extends Dto {\n    public readonly roomId: string;\n    public readonly name: string;\n    public readonly description: string;\n\n    public constructor(data: DtoData<CreateTopic>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {Dto, DtoData} from \"../../Dto\";\n\nexport class DeleteTopic extends Dto {\n    public readonly id: string;\n\n    public constructor(data: DtoData<DeleteTopic>) {\n        super();\n        this.fill(data);\n    }\n}\n","import {EventTarget} from \"../ObservableInterface\";\r\nimport {\r\n    ChatConnectionEvent,\r\n    ChatConnectionInterface,\r\n    ConnectionOptionsInterface,\r\n} from \"./ConnectionAssets\";\r\n\r\nexport interface WebSocketConnectionInterface extends ConnectionOptionsInterface {\r\n    awaitQueueSendDelayMs?: number;\r\n    connectingTimeoutMs?: number;\r\n}\r\n\r\nexport class WebSocketConnection extends EventTarget implements ChatConnectionInterface {\r\n    protected ws: WebSocket|null = null;\r\n    protected sendQueue: any[] = [];\r\n    protected connectingTimeoutId: any;\r\n    protected authenticated: boolean;\r\n\r\n    public constructor(private readonly options: WebSocketConnectionInterface) {\r\n        super();\r\n        if (!this.options.token && !this.options.temporaryNick) {\r\n            throw new Error('Token or temporary nick is required');\r\n        }\r\n    }\r\n\r\n    public send(data: any): void {\r\n        if (!this.ws || this.ws.readyState === this.ws.CLOSED) {\r\n            this.connect();\r\n        }\r\n        if (this.ws.readyState === this.ws.CONNECTING || !this.authenticated) {\r\n            this.sendQueue.push(data);\r\n            return;\r\n        }\r\n        const dataJson = JSON.stringify(data);\r\n        if (this.ws.readyState !== this.ws.OPEN) {\r\n            this.emit(ChatConnectionEvent.error, new Error(`Cannot send ${dataJson}; invalid connection state`));\r\n            return;\r\n        }\r\n        this.ws.send(dataJson);\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.sendQueue = [];\r\n        this.ws?.close();\r\n    }\r\n\r\n    private connect(): void {\r\n        this.authenticated = false;\r\n        const authString = this.options.token ? `token=${this.options.token}` : `nick=${this.options.temporaryNick}`;\r\n        this.ws = new WebSocket(`${this.options.url}?${authString}`);\r\n        this.ws.onclose = ev => this.onClose(ev);\r\n        this.ws.onmessage = ev => this.onMessage(ev);\r\n        this.connectingTimeoutId = setTimeout(\r\n            () => this.triggerConnectionTimeout(),\r\n            this.options.connectingTimeoutMs ?? 10000\r\n        );\r\n    }\r\n\r\n    private onMessage(event: MessageEvent): void {\r\n        const payload = JSON.parse(event.data);\r\n        // Login successfully\r\n        if (!this.authenticated && payload.type && payload.type !== 'Error') {\r\n            this.authenticated = true;\r\n            this.emit(ChatConnectionEvent.ready);\r\n            this.sendFromQueue();\r\n        }\r\n        this.emit(ChatConnectionEvent.message, payload);\r\n    }\r\n\r\n    private onClose(event: CloseEvent): void {\r\n        clearTimeout(this.connectingTimeoutId);\r\n        const reconnect = event.code !== 1000; // Connection was closed because of error\r\n        if (reconnect) {\r\n            this.connect();\r\n        }\r\n        this.emit(ChatConnectionEvent.destroy, reconnect);\r\n    }\r\n\r\n    private sendFromQueue(): void {\r\n        // Send awaiting data to server\r\n        let lastDelay = 0;\r\n        for (const dataIndex in this.sendQueue) {\r\n            const data = this.sendQueue[dataIndex];\r\n            setTimeout(() => this.send(data), lastDelay);\r\n            lastDelay += this.options.awaitQueueSendDelayMs ?? 500;\r\n        }\r\n        this.sendQueue = [];\r\n        clearTimeout(this.connectingTimeoutId);\r\n    }\r\n\r\n    private triggerConnectionTimeout(): void {\r\n        this.destroy();\r\n        this.emit(ChatConnectionEvent.error, new Error('Connection timeout'));\r\n    }\r\n}","import {ConnectionOptionsInterface} from \"./ConnectionAssets\";\r\n\r\nexport interface RestResponseInterface {\r\n    ok: boolean;\r\n    status: number;\r\n    data: any;\r\n}\r\n\r\nexport class RestApiConnection {\r\n    public constructor(protected options: ConnectionOptionsInterface) {\r\n        if (this.options.temporaryNick) {\r\n            throw new Error('Temporary nick is not supported authentication method for REST API');\r\n        }\r\n    }\r\n\r\n    public async send(method: string, uri: string, data: any = undefined): Promise<RestResponseInterface> {\r\n        const headers: any = {\r\n            'Content-Type': 'application/json',\r\n            Accept: 'application/json'\r\n        };\r\n\r\n        if (this.options.token) {\r\n            headers.Authorization = `Bearer ${this.options.token}`;\r\n        }\r\n\r\n        const body = data === undefined ? undefined : JSON.stringify(data);\r\n        const result = await fetch(this.getUrl(uri), {method, body, headers});\r\n\r\n        return {\r\n            ok: result.ok,\r\n            status: result.status,\r\n            data: await result.json(),\r\n        };\r\n    }\r\n\r\n    protected getUrl(uri: string): string {\r\n        return this.removeEndingSlash(this.options.url) + '/' + this.removeStartingSlash(uri);\r\n    }\r\n\r\n    private removeStartingSlash(text: string): string {\r\n        return text.replace(/^\\/+/, '');\r\n    }\r\n\r\n    private removeEndingSlash(text: string): string {\r\n        return text.replace(/\\/+$/, '');\r\n    }\r\n}","import {ChatConnectionEvent, ChatConnectionInterface} from \"./connections/ConnectionAssets\";\r\nimport {EventTarget} from \"./ObservableInterface\";\r\nimport {Envelope} from \"./dtos/protocol/Envelope\";\r\nimport {JoinRoom} from \"./dtos/protocol/commands/JoinRoom\";\r\nimport {Dto} from \"./dtos/Dto\";\r\nimport {RoomJoined} from \"./dtos/protocol/events/RoomJoined\";\r\nimport {LeaveRoom} from \"./dtos/protocol/commands/LeaveRoom\";\r\nimport {RoomLeft} from \"./dtos/protocol/events/RoomLeft\";\r\nimport {CreateRoom} from \"./dtos/protocol/commands/CreateRoom\";\r\nimport {Error as ErrorEvent} from \"./dtos/protocol/events/Error\";\r\nimport {SpaceRooms} from \"./dtos/protocol/events/SpaceRooms\";\r\nimport {DeleteRoom} from \"./dtos/protocol/commands/DeleteRoom\";\r\nimport {RoomDeleted} from \"./dtos/protocol/events/RoomDeleted\";\r\nimport {GetRoomMembers} from \"./dtos/protocol/commands/GetRoomMembers\";\r\nimport {RoomMembers} from \"./dtos/protocol/events/RoomMembers\";\r\nimport {JoinSpace} from \"./dtos/protocol/commands/JoinSpace\";\r\nimport {SpaceJoined} from \"./dtos/protocol/events/SpaceJoined\";\r\nimport {LeaveSpace} from \"./dtos/protocol/commands/LeaveSpace\";\r\nimport {SpaceLeft} from \"./dtos/protocol/events/SpaceLeft\";\r\nimport {CreateSpace} from \"./dtos/protocol/commands/CreateSpace\";\r\nimport {DeleteSpace} from \"./dtos/protocol/commands/DeleteSpace\";\r\nimport {SpaceDeleted} from \"./dtos/protocol/events/SpaceDeleted\";\r\nimport {GetSpaceMembers} from \"./dtos/protocol/commands/GetSpaceMembers\";\r\nimport {SpaceMembers} from \"./dtos/protocol/events/SpaceMembers\";\r\nimport {GetSpaceRooms} from \"./dtos/protocol/commands/GetSpaceRooms\";\r\nimport {GetSession} from \"./dtos/protocol/commands/GetSession\";\r\nimport {Session} from \"./dtos/protocol/events/Session\";\r\nimport {AssignRole} from \"./dtos/protocol/commands/AssignRole\";\r\nimport {SpaceMemberUpdate} from \"./dtos/protocol/events/SpaceMemberUpdate\";\r\nimport {DeassignRole} from \"./dtos/protocol/commands/DeassignRole\";\r\nimport {CreateRole} from \"./dtos/protocol/commands/CreateRole\";\r\nimport {NewRole} from \"./dtos/protocol/events/NewRole\";\r\nimport {DeleteRole} from \"./dtos/protocol/commands/DeleteRole\";\r\nimport {RoleDeleted} from \"./dtos/protocol/events/RoleDeleted\";\r\nimport {SetRolePermissions} from \"./dtos/protocol/commands/SetRolePermissions\";\r\nimport {Permissions} from \"./dtos/protocol/events/Permissions\";\r\nimport {SetUserPermissions} from \"./dtos/protocol/commands/SetUserPermissions\";\r\nimport {CreateTopic} from \"./dtos/protocol/commands/CreateTopic\";\r\nimport {NewTopic} from \"./dtos/protocol/events/NewTopic\";\r\nimport {DeleteTopic} from \"./dtos/protocol/commands/DeleteTopic\";\r\nimport {TopicDeleted} from \"./dtos/protocol/events/TopicDeleted\";\r\nimport {CreateMessage} from \"./dtos/protocol/commands/CreateMessage\";\r\nimport {NewMessage} from \"./dtos/protocol/events/NewMessage\";\r\nimport {GetComputedPermissions} from \"./dtos/protocol/commands/GetComputedPermissions\";\r\nimport {GetRolePermissions} from \"./dtos/protocol/commands/GetRolePermissions\";\r\nimport {GetUserPermissions} from \"./dtos/protocol/commands/GetUserPermissions\";\r\nimport {commands, events} from \"./protocol\";\r\nimport {WebSocketConnection} from \"./connections/WebSocketConnection\";\r\nimport {RestApiConnection} from \"./connections/RestApiConnection\";\r\n\r\ntype ArrayOfPromiseResolvers = [(value: any) => void, (reason?: any) => void];\r\ntype CmdResult<EventDto> = EventDto | ErrorEvent;\r\ntype CommandsToEventsType<CommandT> =\r\n    // General commands\r\n    CommandT extends GetSession ? CmdResult<Session> :\r\n    CommandT extends SetUserPermissions ? CmdResult<Permissions> :\r\n    CommandT extends GetUserPermissions ? CmdResult<Permissions> :\r\n    CommandT extends GetComputedPermissions ? CmdResult<Permissions> :\r\n    // Space commands\r\n    CommandT extends JoinSpace ? CmdResult<SpaceJoined> :\r\n    CommandT extends LeaveSpace ? CmdResult<SpaceLeft> :\r\n    CommandT extends CreateSpace ? CmdResult<SpaceJoined> :\r\n    CommandT extends DeleteSpace ? CmdResult<SpaceDeleted> :\r\n    CommandT extends GetSpaceMembers ? CmdResult<SpaceMembers> :\r\n    CommandT extends GetSpaceRooms ? CmdResult<SpaceRooms> :\r\n    CommandT extends CreateRole ? CmdResult<NewRole> :\r\n    CommandT extends DeleteRole ? CmdResult<RoleDeleted> :\r\n    CommandT extends AssignRole ? CmdResult<SpaceMemberUpdate> :\r\n    CommandT extends DeassignRole ? CmdResult<SpaceMemberUpdate> :\r\n    CommandT extends SetRolePermissions ? CmdResult<Permissions> :\r\n    CommandT extends GetRolePermissions ? CmdResult<Permissions> :\r\n    // Room commands\r\n    CommandT extends JoinRoom ? CmdResult<RoomJoined> :\r\n    CommandT extends LeaveRoom ? CmdResult<RoomLeft> :\r\n    CommandT extends CreateRoom ? CmdResult<RoomJoined> :\r\n    CommandT extends DeleteRoom ? CmdResult<RoomDeleted> :\r\n    CommandT extends GetRoomMembers ? CmdResult<RoomMembers> :\r\n    // Topic commands\r\n    CommandT extends CreateTopic ? CmdResult<NewTopic> :\r\n    CommandT extends DeleteTopic ? CmdResult<TopicDeleted> :\r\n    CommandT extends CreateMessage ? CmdResult<NewMessage> :\r\n    any;\r\n\r\nfunction guessCommandType(obj: any): string {\r\n    for (const type in commands) {\r\n        if (obj instanceof commands[type]) {\r\n            return type;\r\n        }\r\n    }\r\n    return Object.getPrototypeOf(obj).constructor.name;\r\n}\r\n\r\nexport enum ClientEvent {\r\n    message = 'message',\r\n    renewal = 'renewalStart',\r\n    renewalSuccess = 'renewalSuccess',\r\n    renewalError = 'renewalError',\r\n}\r\n\r\nexport interface TokenInterface {\r\n    token: string,\r\n    expiration: string\r\n}\r\n\r\nexport interface MyAccountInterface {\r\n    id: string;\r\n    nick: string;\r\n    avatar: string;\r\n}\r\n\r\nexport class Client extends EventTarget {\r\n    public static readonly defaultClientName = 'polfan-server-js-client';\r\n    public static readonly defaultWebSocketUrl = 'ws://pserv.shado.p5.tiktalik.io:1600/ws';\r\n    public static readonly defaultWebApiUrl = 'http://pserv.shado.p5.tiktalik.io:1600/api';\r\n    public static readonly defaultRestApiUrl = 'https://polfan.pl/webservice/api';\r\n    public static readonly defaultAvatarUrlPrefix = 'https://polfan.pl/modules/users/avatars/';\r\n\r\n    public static async getToken(\r\n        login: string,\r\n        password: string,\r\n        clientName: string = Client.defaultClientName\r\n    ): Promise<TokenInterface> {\r\n        const connection = new RestApiConnection({url: Client.defaultRestApiUrl});\r\n        const response = await connection.send('POST', 'auth/tokens', {\r\n            login, password, client_name: clientName\r\n        });\r\n        if (response.ok) {\r\n            return response.data;\r\n        }\r\n        throw new Error(`Cannot create user token: ${response.data.errors[0]}`);\r\n    }\r\n\r\n    public static createByToken(token: string): Client {\r\n        return new Client(\r\n            new WebSocketConnection({token, url: Client.defaultWebSocketUrl}),\r\n            new RestApiConnection({token, url: Client.defaultRestApiUrl}),\r\n        );\r\n    }\r\n\r\n    public static createByTemporaryNick(temporaryNick: string): Client {\r\n        return new Client(\r\n            new WebSocketConnection({temporaryNick, url: Client.defaultWebSocketUrl}),\r\n            new RestApiConnection({url: Client.defaultRestApiUrl}),\r\n        );\r\n    }\r\n\r\n    protected commandsCount = 0;\r\n    protected awaitingResponse: Map<string, ArrayOfPromiseResolvers> = new Map<string, ArrayOfPromiseResolvers>();\r\n    protected eventsMap: {[x: string]: typeof Dto};\r\n\r\n    public constructor(\r\n        public readonly chatConnection: ChatConnectionInterface,\r\n        public readonly restConnection: RestApiConnection,\r\n    ) {\r\n        super();\r\n        this.setCustomEventMap({}); // Set default event map.\r\n        this.chatConnection.on(ChatConnectionEvent.message, (payload: any) => this.onMessage(payload));\r\n        this.chatConnection.on(ChatConnectionEvent.destroy, (reconnect: boolean) => this.onDisconnect(reconnect));\r\n    }\r\n\r\n    /**\r\n     * Send command to chat server.\r\n     * @param commandPayload Command payload object.\r\n     * @param commandType Command type; if not specified, it will be guessed from the command payload class name.\r\n     * @return Promise which resolves to the event returned by server (including `Error`)\r\n     * in response to command and rejects with connection error.\r\n     */\r\n    public async sendCommand<CommandT extends Dto = any>(\r\n        commandPayload: CommandT,\r\n        commandType?: string\r\n    ): Promise<CommandsToEventsType<CommandT>> {\r\n        const message = this.createEnvelope(commandType ?? guessCommandType(commandPayload), commandPayload);\r\n        this.chatConnection.send(message.toRaw());\r\n        return new Promise(\r\n            (...args) => this.awaitingResponse.set(message.ref as string, args)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Set custom DTO classes for events.\r\n     */\r\n    public setCustomEventMap(customMap: {[x: string]: typeof Dto}): this {\r\n        this.eventsMap = {...events, ...customMap};\r\n        return this;\r\n    }\r\n\r\n    public destroy(): this {\r\n        this.chatConnection.destroy();\r\n        return this;\r\n    }\r\n\r\n    public async getMe(): Promise<MyAccountInterface> {\r\n        const response = await this.restConnection.send('GET', 'auth/me');\r\n        if (response.ok) {\r\n            response.data.id = response.data.id.toString();\r\n            return response.data;\r\n        }\r\n        throw new Error(`Cannot get current user account: ${response.data.errors[0]}`);\r\n    }\r\n\r\n    public async deleteToken(token: string): Promise<void> {\r\n        const response = await this.restConnection.send('DELETE', `auth/tokens/${token}`);\r\n        if (!response.ok) {\r\n            throw new Error(`Cannot delete access token: ${response.data.errors[0]}`);\r\n        }\r\n    }\r\n\r\n    private onMessage(message: any) {\r\n        const dto = this.createEvent(message);\r\n\r\n        const [resolve] = this.awaitingResponse.get(message.ref ?? '') ?? [];\r\n        if (resolve) {\r\n            resolve(dto ?? message.data);\r\n            this.awaitingResponse.delete(message.ref as string);\r\n        }\r\n\r\n        this.emit(ClientEvent.message, message);\r\n        this.emit(message.type ?? 'unknown', message, dto);\r\n    }\r\n\r\n    private onDisconnect(reconnect: boolean): void {\r\n        this.awaitingResponse.forEach(([resolve, reject], key: string) => {\r\n            reject('Disconnected');\r\n            this.awaitingResponse.delete(key);\r\n        });\r\n        if (reconnect) {\r\n            this.emit(ClientEvent.renewal);\r\n            this.chatConnection.once(ChatConnectionEvent.ready, () => this.emit(ClientEvent.renewalSuccess));\r\n            this.chatConnection.once(ChatConnectionEvent.error, () => this.emit(ClientEvent.renewalError));\r\n        }\r\n    }\r\n\r\n    private createEnvelope(commandType: string, dto: Dto): Envelope {\r\n        return new Envelope({\r\n            type: commandType,\r\n            ref: (++this.commandsCount).toString(),\r\n            data: dto\r\n        });\r\n    }\r\n\r\n    private createEvent(message: Envelope): Dto | null {\r\n        if ((message.type ?? false) && this.eventsMap.hasOwnProperty(message.type)) {\r\n            return new (this.eventsMap[message.type] as any)(message.data);\r\n        }\r\n        return null;\r\n    }\r\n}","import {ChatConnectionInterface, ChatConnectionEvent, ConnectionOptionsInterface} from \"./ConnectionAssets\";\r\nimport {EventTarget} from \"../ObservableInterface\";\r\n\r\nexport interface WebApiConnectionOptionsInterface extends ConnectionOptionsInterface {\r\n    attemptsToSend?: number;\r\n    attemptDelayMs?: number;\r\n}\r\n\r\nexport class WebApiConnection extends EventTarget implements ChatConnectionInterface {\r\n    protected sendStack: {data: any, attempts: number, lastTimeoutId: any}[];\r\n\r\n    public constructor(\r\n        protected readonly options: WebApiConnectionOptionsInterface\r\n    ) {\r\n        super();\r\n        if (!this.options.token && !this.options.temporaryNick) {\r\n            throw new Error('Token or temporary nick is required for authentication');\r\n        }\r\n    }\r\n\r\n    public send(data: any): void {\r\n        this.sendStack.push({data: data, attempts: 0, lastTimeoutId: null});\r\n        this.makeApiCall(this.sendStack.length - 1);\r\n    }\r\n\r\n    public destroy(): void {\r\n        // Cancel all awaiting requests\r\n        this.sendStack.forEach(item => {\r\n            if (item.lastTimeoutId) {\r\n                clearTimeout(item.lastTimeoutId);\r\n            }\r\n        });\r\n        this.sendStack = [];\r\n        this.emit(ChatConnectionEvent.destroy, false);\r\n    }\r\n\r\n    protected async onMessage(reqId: number, response: Response): Promise<void> {\r\n        this.sendStack.splice(reqId, 1);\r\n        this.emit(ChatConnectionEvent.message, await response.json());\r\n    }\r\n\r\n    protected onError(reqId: number, body: string): void {\r\n        if (this.sendStack[reqId].attempts >= (this.options.attemptsToSend ?? 10)) {\r\n            this.sendStack.splice(reqId, 1);\r\n            this.emit(ChatConnectionEvent.error, new Error(\r\n                `Cannot send ${body}; aborting after reaching the maximum connection errors`)\r\n            );\r\n            return;\r\n        }\r\n        this.sendStack[reqId].lastTimeoutId = setTimeout(\r\n            () => this.makeApiCall(reqId),\r\n            this.options.attemptDelayMs ?? 3000\r\n        );\r\n    }\r\n\r\n    protected makeApiCall(reqId: number): void {\r\n        this.sendStack[reqId].attempts++;\r\n        const bodyJson = JSON.stringify(this.sendStack[reqId].data);\r\n        const headers: any = {\r\n            'Content-Type': 'application/json',\r\n            Accept: 'application/json'\r\n        };\r\n\r\n        if (this.options.token) {\r\n            headers.Authorization = `Bearer ${this.options.token}`;\r\n        } else if (this.options.temporaryNick) {\r\n            headers.Authorization = `Temp ${this.options.temporaryNick}`;\r\n        }\r\n\r\n        fetch(this.options.url, {\r\n            headers,\r\n            body: bodyJson,\r\n            method: 'POST',\r\n        })\r\n            .then(response => this.onMessage(reqId, response))\r\n            .catch(() => this.onError(reqId, bodyJson));\r\n    }\r\n}"],"names":["root","factory","exports","module","define","amd","self","ChatConnectionEvent","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","EventTarget","Map","eventName","handler","this","addHandler","events","onceEvents","args","callHandlers","map","handlers","push","set","forEach","callback","cast","data","dto","castArray","Array","isArray","Error","name","item","Dto","overrideBy","JSON","stringify","toRaw","object","keys","constructor","assign","Envelope","fill","Bye","Ok","Role","Space","roles","Topic","Room","topics","UserState","spaces","rooms","User","Session","state","user","Permission","Permissions","permissions","SpaceJoined","space","SpaceLeft","SpaceMember","SpaceMemberJoined","member","SpaceMemberLeft","SpaceMemberUpdate","SpaceDeleted","SpaceMembers","members","RoomSummary","SpaceRooms","summaries","NewRole","role","RoleDeleted","RoomJoined","room","RoomLeft","RoomMember","RoomMemberJoined","RoomMemberLeft","RoomMembers","NewRoom","summary","RoomDeleted","NewTopic","topic","TopicDeleted","Message","author","NewMessage","message","commands","GetSession","SetUserPermissions","GetUserPermissions","GetComputedPermissions","JoinSpace","LeaveSpace","CreateSpace","DeleteSpace","GetSpaceMembers","GetSpaceRooms","CreateRole","DeleteRole","AssignRole","DeassignRole","SetRolePermissions","GetRolePermissions","JoinRoom","LeaveRoom","CreateRoom","DeleteRoom","GetRoomMembers","CreateTopic","DeleteTopic","CreateMessage","WebSocketConnection","options","token","temporaryNick","ws","readyState","CLOSED","connect","CONNECTING","authenticated","dataJson","OPEN","send","emit","error","sendQueue","close","authString","WebSocket","url","onclose","ev","onClose","onmessage","onMessage","connectingTimeoutId","setTimeout","triggerConnectionTimeout","connectingTimeoutMs","event","payload","parse","type","ready","sendFromQueue","clearTimeout","reconnect","code","destroy","lastDelay","dataIndex","awaitQueueSendDelayMs","ClientEvent","RestApiConnection","method","uri","undefined","headers","Accept","Authorization","body","fetch","getUrl","result","ok","status","json","removeEndingSlash","removeStartingSlash","text","replace","i","guessCommandType","getPrototypeOf","Client","chatConnection","restConnection","setCustomEventMap","on","onDisconnect","commandPayload","commandType","createEnvelope","Promise","awaitingResponse","ref","customMap","eventsMap","response","id","toString","errors","createEvent","resolve","reject","renewal","once","renewalSuccess","renewalError","commandsCount","login","password","clientName","defaultClientName","connection","defaultRestApiUrl","client_name","defaultWebSocketUrl","WebApiConnection","sendStack","attempts","lastTimeoutId","makeApiCall","length","reqId","splice","attemptsToSend","attemptDelayMs","bodyJson","then","onError"],"sourceRoot":""}